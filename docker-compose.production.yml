# Production Docker Compose Configuration for driveway-hub.app
# Usage: docker compose -f docker-compose.yml -f docker-compose.production.yml --env-file .env.production up -d

services:
  postgres:
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports: []  # No external access in production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
  redis:
    restart: always
    ports: []  # No external access in production
    volumes:
      - redis_prod_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      target: production
    restart: always
    environment:
      NODE_ENV: production
      # Database
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      # Redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # Security
      JWT_SECRET: ${JWT_SECRET}
      # Tesla API
      TESLA_CLIENT_ID: ${TESLA_CLIENT_ID}
      TESLA_CLIENT_SECRET: ${TESLA_CLIENT_SECRET}
      TESLA_OAUTH_REDIRECT_URI: ${TESLA_OAUTH_REDIRECT_URI}
      TESLA_SUCCESS_URL: ${TESLA_SUCCESS_URL}
      TESLA_OAUTH_SCOPE: ${TESLA_OAUTH_SCOPE}
      # URLs
      DOMAIN: ${DOMAIN}
      FRONTEND_URL: ${FRONTEND_URL}
    ports: []  # Behind nginx reverse proxy
    volumes: []  # No volume mounts in production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request({hostname: 'localhost', port: 3000, path: '/api/health', timeout: 5000}, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

  frontend:
    build:
      context: ./frontend
      target: production
    restart: always
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_ENVIRONMENT: production
      REACT_APP_TESLA_REDIRECT_URI: ${TESLA_OAUTH_REDIRECT_URI}
      REACT_APP_TESLA_SUCCESS_URL: ${TESLA_SUCCESS_URL}
    ports: []  # Behind nginx reverse proxy
    profiles: []  # Always include frontend in production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: driveway-hub-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - driveway-hub-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/driveway-hub/data/postgres
  redis_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/driveway-hub/data/redis
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local